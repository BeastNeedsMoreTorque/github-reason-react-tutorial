// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var $$Array     = require("bs-platform/lib/js/array.js");
var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var RepoData    = require("./RepoData.js");
var RepoItem    = require("./RepoItem.js");
var ReasonReact = require("reason-react/lib/js/src/reasonReact.js");

var component = ReasonReact.reducerComponent("App");

function make() {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (self) {
      var handleReposLoaded = Curry._1(self[/* reduce */3], (function (repoData) {
              return /* Loaded */[repoData];
            }));
      RepoData.fetchRepos(/* () */0).then((function (repoData) {
              Curry._1(handleReposLoaded, repoData);
              return Promise.resolve(/* () */0);
            }));
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (self) {
      var match = self[/* state */4][/* repoData */0];
      var repoItem = match ? $$Array.map((function (repo) {
                return ReasonReact.element(/* Some */[repo[/* full_name */0]], /* None */0, RepoItem.make(repo, /* array */[]));
              }), match[0]) : "Loading";
      return React.createElement("div", {
                  className: "App"
                }, React.createElement("h1", undefined, "Reason Projects"), repoItem);
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* repoData : None */0];
    });
  newrecord[/* reducer */12] = (function (action, _) {
      return /* Update */Block.__(0, [/* record */[/* repoData : Some */[action[0]]]]);
    });
  return newrecord;
}

exports.component = component;
exports.make      = make;
/* component Not a pure module */
